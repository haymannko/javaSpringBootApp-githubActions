name: Java App CI/CD Pipeline

on:
  push:
    branches:
      - main  # or main, depending on your branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 🧩 Checkout Code
        uses: actions/checkout@v4

      - name: ☕ Set up Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 🧱 Build JAR with Maven
        run: |
          mvn clean install -DskipTests

      - name: 🧾 Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: calculator-jar
          path: target/calculator-1.0.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: 📥 Download Built JAR
        uses: actions/download-artifact@v4
        with:
          name: calculator-jar
          path: target/

      - name: 🚀 Start GitHub Deployment
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ secrets.DEPLOYMENT_TOKEN }}
          env: production
          ref: staging
          desc: "Starting deployment to Z.com VPS"

      - name: 🔑 Set up SSH Access
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key.pem
          chmod 600 ~/.ssh/deploy_key.pem
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: 📦 Deploy to Z.com VPS
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/pemkey.pem ubuntu@${{ secrets.SSH_HOST }} << 'EOF'
            set -e

            echo "🟢 Updating server and preparing environment..."
            sudo apt update -y
            sudo apt install openjdk-17-jdk maven -y

            echo "☕ Java Version:"
            java -version

            echo "📁 Prepare app directory..."
            sudo mkdir -p /opt/myapp
            sudo adduser --system --no-create-home --group --disabled-login appuser || true
            sudo chown -R appuser:appuser /opt/myapp
            sudo chmod 750 /opt/myapp

            #echo "🧹 Stopping old service..."
            #sudo systemctl stop javasimple.service || true

            echo "📤 Copying new JAR file..."
            exit
          EOF

      - name: 📤 Copy New JAR to VPS
        run: |
          scp -i ~/.ssh/pemkey.pem -o StrictHostKeyChecking=no target/calculator-1.0.jar ubuntu@${{ secrets.SSH_HOST }}:/tmp/calculator-1.0.jar

      - name: ⚙️ Restart Service on VPS
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/pemkey.pem ubuntu@${{ secrets.SSH_HOST }} << 'EOF'
            set -e

            echo "📦 Moving JAR to /opt/myapp/..."
            sudo cp /target/calculator-1.0.jar /opt/myapp/myapp.jar
            sudo chown appuser:appuser /opt/myapp/myapp.jar
            sudo chmod 644 /opt/myapp/myapp.jar

            echo "🔁 Reloading and restarting systemd..."
            sudo systemctl daemon-reload
            sudo systemctl restart javasimple.service

            echo "🟩 Checking service status..."
            sudo systemctl status javasimple.service --no-pager
          EOF

      - name: ✅ Mark Deployment Success
        uses: bobheadxi/deployments@v1
        if: success()
        with:
          step: finish
          token: ${{ secrets.DEPLOYMENT_TOKEN }}
          env: production
          status: success
          desc: "Deployment to Z.com VPS successful!"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: ❌ Mark Deployment Failure
        uses: bobheadxi/deployments@v1
        if: failure()
        with:
          step: finish
          token: ${{ secrets.DEPLOYMENT_TOKEN }}
          env: production
          status: failure
          desc: "Deployment to Z.com VPS failed."
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

